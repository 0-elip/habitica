// Generated by CoffeeScript 1.3.3
var ONE_YEAR, app, derby, express, expressApp, gzippo, habitrpgMobile, habitrpgSessions, http, path, publicPath, racer, root, server, serverError, store;

http = require('http');

path = require('path');

express = require('express');

gzippo = require('gzippo');

derby = require('derby');

app = require('../app');

serverError = require('./serverError');

racer = require('derby/node_modules/racer');

racer.set('transports', ['xhr-polling']);

expressApp = express();

server = http.createServer(expressApp);

module.exports = server;

derby.use(derby.logPlugin);

derby.use(require('racer-db-mongo'));

store = derby.createStore({
  db: {
    type: 'Mongo',
    uri: process.env.NODE_DB_URI
  },
  listen: server
});

ONE_YEAR = 1000 * 60 * 60 * 24 * 365;

root = path.dirname(path.dirname(__dirname));

publicPath = path.join(root, 'public');

habitrpgMobile = function(req, res, next) {
  var model;
  model = req.getModel();
  model.set('_mobileDevice', /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(req.header('User-Agent')));
  return next();
};

habitrpgSessions = function(req, res, next) {
  var acceptableUid, uidParam;
  uidParam = req.url.split('/')[1];
  acceptableUid = require('guid').isGuid(uidParam) || (uidParam === '3' || uidParam === '4' || uidParam === '9');
  if (acceptableUid && req.session.userId !== uidParam) {
    req.session.userId = uidParam;
  }
  return next();
};

expressApp.use(express.favicon()).use(gzippo.staticGzip(publicPath, {
  maxAge: ONE_YEAR
})).use(express.compress()).use(express.cookieParser()).use(store.sessionMiddleware({
  secret: process.env.SESSION_SECRET || 'YOUR SECRET HERE',
  cookie: {
    maxAge: ONE_YEAR
  }
})).use(habitrpgSessions).use(store.modelMiddleware()).use(habitrpgMobile).use(app.router()).use(expressApp.router).use(serverError(root));

expressApp.all('*', function(req) {
  throw "404: " + req.url;
});
